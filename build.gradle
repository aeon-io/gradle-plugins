plugins {
    id 'com.gradle.plugin-publish' version '0.9.2'
//    id 'org.sonarqube' version '1.2'
    id 'com.jfrog.bintray' version '1.5'
//    id 'org.ajoberstar.grgit' version '1.4.0-rc.1'
    id 'org.ajoberstar.github-pages' version '1.3.2'
}

apply plugin: 'build-dashboard'
apply plugin: 'idea'
apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'jacoco'
// apply plugin: 'codenarc'

// apply from: 'gradle/maven.gradle'

idea {
    module {
        jdkName = '1.8'
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    jcenter()
}

task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

dependencies {
    compile gradleApi()
    compile localGroovy()

//    codenarc ''

    testCompile gradleTestKit()
    testCompile "junit:junit:$junitVersion"
    testCompile("org.spockframework:spock-core:$spockVersion") {
        exclude module: 'groovy-all'
    }
    testRuntime files(project.tasks.createClasspathManifest)
}

// Hack because gradle.properties in USER_HOME isn't working quite right
project.afterEvaluate {
    if (project.hasProperty('gradlePublishKey') && project.hasProperty('gradlePublishSecret')) {
        System.setProperty('gradle.publish.key', project.gradlePublishKey)
        System.setProperty('gradle.publish.secret', project.gradlePublishSecret)
    }
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

jacoco {
    toolVersion = "0.7.1.201405082137"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
//        html.destination "${buildDir}/jacocoHtml"
    }
}

check.dependsOn jacocoTestReport

test {
    testLogging {
//        events "passed", "skipped", "failed", "standardOut", "standardError"
        showStandardStreams = true
    }
}

pluginBundle {
    website = 'https://github.com/aeon-io/gradle-plugins'
    vcsUrl = 'https://github.com/aeon-io/gradle-plugins.git'

    description = 'Aeon Gradle Plugins'

    plugins {
        dockerBuildPlugin {
            id = 'io.aeon.docker-build'
            displayName = "Aeon's Docker build plugin"
            tags = ['aeon', 'docker', 'container']
        }
        testSetPlugin {
            id = 'io.aeon.test-sets'
            displayName = "Aeon's test Set plugin"
            tags = ['aeon', 'test', 'integration']
        }
//        optionalScopePlugin {
//            id = 'io.aeon.optional-scope'
//            displayName = "Aeon's optional scope plugin"
//            tags = ['aeon', 'scopes', 'optional']
//        }
    }

    mavenCoordinates {
        groupId = 'io.aeon'
        artifactId = 'docker-build-plugin'
    }
}

githubPages {
    repoUri = 'git@github.com:aeon-io/gradle-plugins.git'

    pages {
        from(javadoc.outputs.files) {
            into 'docs/javadoc'
        }
        from(groovydoc.outputs.files) {
            into 'docs/groovydoc'
        }
    }
}

publishGhPages.dependsOn javadoc, groovydoc
