apply plugin: "maven"
apply plugin: "maven-publish"
apply plugin: "signing"


task groovydocJar(type: Jar) {
    classifier = 'javadoc'
    from groovydoc
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives groovydocJar, sourcesJar
}

signing {
    sign configurations.archives
}


def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "aeon-builds"
            name 'Aeon Builds'
            email "builds+gradle@aeon.io"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact groovydocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Provides a Docker Build task and configuration plugin')
                root.children().last() + pomConfig
            }
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'Docker Build Gradle Plugin'
                packaging 'jar'
                artifactId = "docker-build-plugin"
                description 'A application used as an example on how to set up pushing its components to the Central Repository.'
                url 'http://aeon.io/docs/gradle-plugins'

                // TODO Github
                scm {
                    connection 'scm:git:http://github.com/'
                    developerConnection 'scm:svn:https://foo.googlecode.com/svn/trunk/'
                    url 'http://foo.googlecode.com/svn/trunk/'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
}
